/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) 
    {
        ListNode*first=head;
        ListNode*k=first;
        ListNode*copy=head;
        if(!head)
        return head;
        if(!head->next && head->val==val)
        return NULL;
        while(first)
        {
            
            if(first->val!=val)
            {
                copy->val=first->val;
                k=copy;
                copy=copy->next;
            }
            first=first->next;
        }
        k->next=NULL;
        if(head->val!=val)
        return head;
        return NULL;
    }
};
