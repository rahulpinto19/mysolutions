class Solution {
public:
void help(int row,int col,vector<vector<int>>& arr)
{
    priority_queue <int, vector<int>, greater<int>> temp;
    int i=row;
    int j=col;
    while(i<arr.size()&&j<arr[0].size())
    {
        temp.push(arr[i][j]);
        i++;
        j++;
    }
    while(!temp.empty())
    {
        arr[row][col]=temp.top();temp.pop();
        row++;
        col++;
    }
}
    vector<vector<int>> diagonalSort(vector<vector<int>>& mat) {
        if(mat.size()==1||mat[0].size()==1) return mat;
        for(int i=0;i<mat[0].size();i++)
        {
            help(0,i,mat);
        }
        for(int i=0;i<mat.size();i++)
        help(i,0,mat);
        return mat;
    }
};
